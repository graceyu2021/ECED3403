X-Makina Assembler - Version XM-23P Single Pass+ Assembler - Release 24.04.17
Input file name: LDST4.asm
Time of assembly: Mon 8 Jul 2024 13:05:35 
  1	    	     	;
  2	    	     	; Example of index addressing #2
  3	    	     	; Load and store using bytes and indexing
  4	    	     	; This is an example of a post-increment
  5	    	     	;
  6	    	     	; Copy three bytes from S1 to S2
  7	    	     	;
  8	    	     		data
  9	    	     		org	#100
 10	0100	7247	S1	ascii	"Grace Yu"
 10	0102	6361
 10	0104	2065
 10	0106	7559
 11	    	     		org	#110
 12	0110	5858	S2	ascii	"XXX"
 12	0112	0058
 13	    	     	;
 14	    	     		code
 15	    	     		org	#200
 16	    	     	LDST4
 17	    	     	;
 18	    	     	; Get address of V1 into R0
 19	    	     	;
 20	0200	6000		movl	S1,R0		; R0 = #??00
 21	0202	7808		movh	S1,R0		; R0 = #0100
 22	    	     	;
 23	    	     	; Get address of V1 into R1
 24	    	     	;
 25	0204	6081		movl	S2,R1		; R1 = #??10
 26	0206	7809		movh	S2,R1		; R1 = #0110
 27	    	     	;
 28	    	     	; Repeat (without loop):
 29	    	     	;
 30	    	     	; mem[R1] <- mem[R0]
 31	    	     	;
 32	    	     	; R0, R1 contain effective addresses
 33	    	     	; Need a temporary (use R2)
 34	    	     	; R2 <- mem[R0]
 35	    	     	; mem[R1] <- R2
 36	    	     	; 
 37	    	     	; Do this 3x:
 38	    	     	; 110 <- 100
 39	    	     	; 111 <- 101
 40	    	     	; 112 <- 102
 41	    	     	;
 42	0208	5882		LD	R0+,R2		; R1 <- mem[R0]
 43	020A	5C91		ST	R2,R1+		; mem[R1] <- R1
 44	    	     	;
 45	020C	5882		LD	R0+,R2		; R1 <- mem[R0]
 46	020E	5C91		ST	R2,R1+		; mem[R1] <- R1
 47	    	     	;
 48	0210	58C2		LD.B	R0+,R2		; R1 <- mem[R0]
 49	0212	5CD1		ST.b	R2,R1+		; mem[R1] <- R1
 50	    	     	;
 51	0214	58C2		LD.B	R0+,R2		; R1 <- mem[R0]
 52	0216	5CD1		ST.b	R2,R1+		; mem[R1] <- R1
 53	    	     	;
 54	0218	4088		add	$1,R0
 55	021A	4089		add	$1,R1
 56	    	     	;
 57	021C	5942		LD.b	R0-,R2		; R1 <- mem[R0]
 58	021E	5D51		ST.b	R2,R1-		; mem[R1] <- R1
 59	    	     	;
 60	0220	5942		LD.b	R0-,R2		; R1 <- mem[R0]
 61	0222	5D51		ST.b	R2,R1-		; mem[R1] <- R1
 62	    	     	;
 63	    	     	; Put breakpoint on next address
 64	    	     	;
 65	    	     	BrkPtHere
 66	    	     	;
 67	    	     		end LDST4

Successful completion of assembly - 1P

** Symbol table **

Constants (Equates)
Name                               	Type	Value	Decimal

Labels (Code)
Name                               	Type	Value	Decimal
BrkPtHere                          	REL	0224	548	PRI
LDST4                              	REL	0200	512	PRI

Labels (Data)
Name                               	Type	Value	Decimal
S2                                 	REL	0110	272	PRI
S1                                 	REL	0100	256	PRI

Registers
Name                               	Type	Value	Decimal
R7                                 	REG	0007	7	PRI
R6                                 	REG	0006	6	PRI
R5                                 	REG	0005	5	PRI
R4                                 	REG	0004	4	PRI
R3                                 	REG	0003	3	PRI
R2                                 	REG	0002	2	PRI
R1                                 	REG	0001	1	PRI
R0                                 	REG	0000	0	PRI

.XME file: C:\git\ECED3403\ECED3403_assignment\ECED3403_assignment_A1\ECED3403_assignment_A1_code\x64\Debug\LDST4.xme

