X-Makina Assembler - Version XM-23P Single Pass+ Assembler - Release 24.04.17
Input file name: Stack.asm
Time of assembly: Sun 7 Jul 2024 01:34:47 
  1	    	     	;
  2	    	     	; Stack example
  3	    	     	; XM23 does not have a stack or stack instructions
  4	    	     	;
  5	    	     	; SP points to top of stack (empty word)
  6	    	     	; Operations:
  7	    	     	; PUSH: value onto stack (into low mem):
  8	    	     	;	mem[SP] <- value
  9	    	     	;	SP <- SP - 2
 10	    	     	; PULL: value from stack (into high mem):
 11	    	     	;	SP <- SP + 2
 12	    	     	;	value <- mem[SP]
 13	    	     	;
 14	    	     	SP	equ	R6	; 'SP' equates to R6
 15	    	     	;
 16	    	     		data
 17	    	     	;
 18	    	     	
 19	    	     		org	#70
 20	0070	0000		bss	#0E	; Reserve 70 to 7C	
 21	007E	0000	StkTop	bss	#1	; Top-of-stack (7E)
 22	    	     	;
 23	    	     		code
 24	    	     		org	#100
 25	    	     	StkEx
 26	    	     	;
 27	    	     	; Assign values to R0, R1, R2
 28	    	     	;
 29	0100	6FF8		movlz	#ff,R0	; R0 <- #00FF
 30	0102	77F9		movls	#ff,R1	; R1 <- #FFFF
 31	0104	7FFA		movh	#ff00,R2 ; R2 <- #FF00
 32	    	     	;
 33	    	     	; SP <- address of StkTop
 34	    	     	;
 35	0106	6BF6		movlz	StkTop,SP
 36	    	     	;
 37	    	     	; Push R0, R1, R2
 38	    	     	; SP decrement
 39	    	     	;
 40	0108	5D06		st	R0,SP-	; mem[SP] <- R0; SP <- SP - 2
 41	010A	5D0E		st	R1,SP-	; mem[SP] <- R1; SP <- SP - 2
 42	010C	5D16		st	R2,SP-	; mem[SP] <- R2; SP <- SP - 2
 43	    	     	;
 44	    	     	; Modify R0, R1, R2 (complement)
 45	    	     	;
 46	010E	46B8		xor	$-1,R0
 47	0110	46B9		xor	$-1,R1
 48	0112	46BA		xor	$-1,R2
 49	    	     	;
 50	    	     	; Restore (pull) R2, R1, R0
 51	    	     	;
 52	0114	5AB2		ld	+SP,R2	; SP <- SP + 2; R2 <- mem[SP]
 53	0116	5AB1		ld	+SP,R1	; SP <- SP + 2; R1 <- mem[SP]
 54	0118	5AB0		ld	+SP,R0	; SP <- SP + 2; R0 <- mem[SP]
 55	    	     	;
 56	    	     	; Breakpoint address
 57	    	     	;
 58	    	     	BrkPtAdr
 59	    	     		end	StkEx

Successful completion of assembly - 1P

** Symbol table **

Constants (Equates)
Name                               	Type	Value	Decimal

Labels (Code)
Name                               	Type	Value	Decimal
BrkPtAdr                           	REL	011A	282	PRI
StkEx                              	REL	0100	256	PRI

Labels (Data)
Name                               	Type	Value	Decimal
StkTop                             	REL	007E	126	PRI

Registers
Name                               	Type	Value	Decimal
SP                                 	REG	0006	6	PRI
R7                                 	REG	0007	7	PRI
R6                                 	REG	0006	6	PRI
R5                                 	REG	0005	5	PRI
R4                                 	REG	0004	4	PRI
R3                                 	REG	0003	3	PRI
R2                                 	REG	0002	2	PRI
R1                                 	REG	0001	1	PRI
R0                                 	REG	0000	0	PRI

.XME file: C:\git\ECED3403\ECED3403_assignment\ECED3403_assignment_A1\ECED3403_assignment_A1_code\x64\Debug\Stack.xme

